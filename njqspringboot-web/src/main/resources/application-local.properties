#监听端口
server.port=8888
# 绑定的地址
server.address= 127.0.0.1
#session有效时长
server.session-timeout=30
#默认为/
server.context-path=/

server.tomcat.compression=on
server.tomcat.compressableMimeTypes=application/json,application/xml
#ssl相关配置
#server.ssl.* 


# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址


spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6000
# Redis服务器连接密码（默认为空）
spring.redis.password=Tapd!%!^


# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=1000
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=1
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
#spring.redis.timeout=
#当池内没有返回对象时，最大等待时间
spring.redis.pool.max-wait-millis=20000
#当调用borrow Object方法时，是否进行有效性检查
spring.redis.pool.test-on-borrow=true
#当调用return Object方法时，是否进行有效性检查
spring.redis.pool.test-on-return=true

#name of Redis server
#spring.redis.sentinel.master= 
#comma-separated list of host:port pairs 
#spring.redis.sentinel.nodes= 

####Tomcat配置#########
# tomcat最大线程数，默认为200
server.tomcat.max-threads=800
# tomcat的URI编码
server.tomcat.uri-encoding=UTF-8
# 存放Tomcat的日志、Dump等文件的临时文件夹，默认为系统的tmp文件夹（如：C:\Users\Shanhy\AppData\Local\Temp）
server.tomcat.basedir=E:/njqspringbootlog/
# 打开Tomcat的Access日志，并可以设置日志格式的方法：
#server.tomcat.access-log-enabled=true
#server.tomcat.access-log-pattern=
# accesslog目录，默认在basedir/logs
#server.tomcat.accesslog.directory=
server.tomcat.access-log-enabled=true
# log pattern of the access log
server.tomcat.access-log-pattern= njqspringboot.access.log
# 日志文件目录
logging.path=E:/njqspringbootlog/
# 日志文件名称，默认为spring.log
logging.file=njqspringbootlog.log




# 数据库访问配置
# 主数据源，默认的
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#低于mysql6.0版本驱动类
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#mysql 6.0+版本
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://192.168.1.10:3306/xxfarm?serverTimezone=UTC
#spring.datasource.username=GreatTeam
#spring.datasource.password=Tapd!%!^

spring.datasource.url=jdbc:mysql://localhost:3306/xxfarm?serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root


# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
spring.datasource.maxIdle=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒 
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小 
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

#阀值设的很低，理论上SQL查询打印出关于慢查询的警告日志
spring.datasource.jdbcInterceptors=ConnectionState;SlowQueryReport(threshold=0)
